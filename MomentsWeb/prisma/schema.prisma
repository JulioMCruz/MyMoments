generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_POSTGRESQL_URL")
}

model User {
  id                  String              @id @default(uuid())
  walletAddress       String              @unique
  isVerified          Boolean             @default(false)
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  createdMoments      Moment[]            @relation("CreatedMoments")
  participatedMoments MomentParticipant[]
}

model Moment {
  id           String              @id @default(uuid())
  title        String
  description  String
  imageUrl     String
  ipfsHash     String
  status       String              @default("created")
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  creatorId    String
  nftTokenId   String?
  creator      User                @relation("CreatedMoments", fields: [creatorId], references: [id])
  participants MomentParticipant[]
  publishInfo  MomentPublish?
}

model MomentParticipant {
  id        String   @id @default(uuid())
  userId    String
  momentId  String
  hasSigned Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  moment    Moment   @relation(fields: [momentId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, momentId])
  @@index([userId])
  @@index([momentId])
}

model MomentPublish {
  id             String   @id @default(uuid())
  momentId       String   @unique
  isPublished    Boolean  @default(false)
  isPrivate      Boolean  @default(false)
  allowedWallets String[] @default([])
  pricingType    String   @default("free")
  price          Float    @default(0)
  publishedAt    DateTime @default(now())
  updatedAt      DateTime @updatedAt
  moment         Moment   @relation(fields: [momentId], references: [id])

  @@index([momentId])
}
